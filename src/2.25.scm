(define (deep-reverse items)
  (define (reverse-iter a b)
    (cond ((null? a) b)
          ((not (pair? a)) a)
          (else (reverse-iter (cdr a) (cons (deep-reverse (car a)) b)))))
  (reverse-iter items nil))
; > (deep-reverse '(1 (2 3) (4 5)))
; (mcons (mcons 5 (mcons 4)) (mcons (mcons 3 (mcons 2)) (mcons 1)))
; > '((5 4) (3 2) 1)
; (mcons (mcons 5 (mcons 4)) (mcons (mcons 3 (mcons 2)) (mcons 1)))
