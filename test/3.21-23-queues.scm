(define x '(a b))
(define q1 (cons x (cdr x)))
(define y '(a b c d e f))
(define q2 (cons y (cdr (cddddr y))))
(define (run)
  ; 3.21
  (print-queue q1)
  (print-queue q2)
  ; 3.22
  (let ((q (make-queue)))
    (assert (empty-queue? q))
    (insert-queue! q 'a)
    (insert-queue! q 'b)
    (assert (not (empty-queue? q)))
    (assert (eq? (front q) 'a))
    (delete-queue! q)
    (assert (eq? (front q) 'b)))
  ; 3.23
  (let ((q (make-deque)))
    (assert (empty-deque? q))
    (rear-insert-deque! q 'a)
    (assert (not (empty-deque? q)))
    (rear-insert-deque! q 'b)
    (assert (eq? (front-deque q) 'a))
    (assert (eq? (rear-deque q) 'b))
    (front-insert-deque! q 'c)
    (front-insert-deque! q 'd)
    (assert (eq? (front-deque q) 'd))
    (assert (eq? (rear-deque q) 'b))
    (front-delete-deque! q)
    (rear-delete-deque! q)
    (assert (not (empty-deque? q)))
    (assert (eq? (front-deque q) 'c))
    (assert (eq? (rear-deque q) 'a))
    (rear-delete-deque! q)
    (assert (not (empty-deque? q)))
    (rear-delete-deque! q)
    (assert (empty-deque? q)))
  "All tests passed!")
