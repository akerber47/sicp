(define (run)
  (let ((s1 '(1 2 3))
        (s2 '(2 3 4))
        (s3 '(5 4 3 2 1 0))
        (s4 '(3)))
    (assert (element-of-set? 2 s1))
    (assert (element-of-set? 3 s4))
    (assert (not (element-of-set? 4 s1)))
    (assert (not (element-of-set? 1 ())))
    (assert (equal? (adjoin-set 4 s1) '(4 1 2 3)))
    (assert (equal? (adjoin-set 1 s1) '(1 1 2 3)))
    (assert (equal? (intersection-set s1 s2) '(2 3)))
    (assert (equal? (intersection-set s2 s3) '(2 3 4)))
    (assert (equal? (union-set s1 s2) '(1 2 3 2 3 4)))
    (assert (equal? (union-set s2 s1) '(2 3 4 1 2 3)))
    (assert (equal? (union-set s1 ()) '(1 2 3)))
    (assert (equal? (union-set () s1) '(1 2 3)))
    (assert (equal? (union-set s3 s2) '(5 4 3 2 1 0 2 3 4)))
    "All tests passed!"
  )
)
